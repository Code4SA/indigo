# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-04-22 12:39
from __future__ import unicode_literals

import json
from reversion.models import Version

from django.contrib.contenttypes.models import ContentType
from django.db import migrations


from indigo_api.data_migrations.akn3 import FrbrUriAknPrefix


def migrate_uris(apps, schema_editor, forward):
    """ Start or stop using AKN3 FRBR URIs (i.e. /akn prefix)
    - Update URIs of all existing works and documents
    - Update URIs of historical versions of all works and documents
    - Update meta/identification block of each AKN document
    - Update hrefs in all documents
    - Update meta/identification block and hrefs in historical documents
    """
    db_alias = schema_editor.connection.alias
    Work = apps.get_model("indigo_api", "Work")
    Document = apps.get_model("indigo_api", "Document")
    ct_work = ContentType.objects.get_for_model(Work)
    ct_doc = ContentType.objects.get_for_model(Document)
    migration = FrbrUriAknPrefix()

    for work in Work.objects.using(db_alias).all():
        work.frbr_uri = migration.new_frbr_uri(work.frbr_uri, forward)
        work.save()

        # Update historical work versions
        for version in Version.objects.filter(content_type=ct_work.pk)\
                .filter(object_id=work.pk).using(db_alias).all():
            data = json.loads(version.serialized_data)
            # The work's URI (i.e. year / number / subtype) may have changed
            data[0]['fields']['frbr_uri'] = migration.new_frbr_uri(data[0]['fields']['frbr_uri'], forward)
            version.serialized_data = json.dumps(data)
            version.save()

    for document in Document.objects.using(db_alias).all():
        # Update the document object's FRBR URI
        document.frbr_uri = document.work.frbr_uri
        # Update the document's XML
        document.document_xml = migration.migrate_xml(document.document_xml, document.frbr_uri, forward)
        document.save()

        # Update historical Document versions
        for version in Version.objects.filter(content_type=ct_doc.pk)\
                .filter(object_id=document.pk).using(db_alias).all():
            data = json.loads(version.serialized_data)
            # Update FRBR URI (year / number / subtype may have changed)
            data[0]['fields']['frbr_uri'] = migration.new_frbr_uri(data[0]['fields']['frbr_uri'], forward)
            data[0]['fields']['document_xml'] = migration.migrate_xml(data[0]['fields']['document_xml'], data[0]['fields']['frbr_uri'], forward)
            version.serialized_data = json.dumps(data)
            version.save()


def migrate_forward(apps, schema_editor):
    migrate_uris(apps, schema_editor, forward=True)


def migrate_backward(apps, schema_editor):
    migrate_uris(apps, schema_editor, forward=False)


class Migration(migrations.Migration):

    dependencies = [
        ('indigo_api', '0129_workflow_priority'),
    ]

    operations = [
        migrations.RunPython(migrate_forward, migrate_backward),
    ]
